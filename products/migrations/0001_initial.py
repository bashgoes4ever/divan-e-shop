# Generated by Django 3.0.6 on 2020-08-23 16:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Casing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('img', models.ImageField(upload_to='static/img/products/', verbose_name='Изображение')),
                ('img_thumb', models.ImageField(blank=True, editable=False, upload_to='static/img/products/')),
            ],
            options={
                'verbose_name': 'Обивка',
                'verbose_name_plural': 'Обивки',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('slug', models.SlugField(blank=True)),
                ('is_main', models.BooleanField(default=False, verbose_name='Выводить на главной?')),
                ('priority', models.IntegerField(default=1, verbose_name='Приоритет')),
                ('level', models.IntegerField(blank=True, default=0, verbose_name='Уровень')),
                ('img', models.ImageField(blank=True, upload_to='static/img/categories/', verbose_name='Изображение')),
                ('img_thumb', models.ImageField(blank=True, editable=False, upload_to='static/img/categories/')),
                ('parent_category', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='children', to='products.Category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('img', models.ImageField(upload_to='static/img/products/', verbose_name='Изображение')),
                ('img_thumb', models.ImageField(blank=True, editable=False, upload_to='static/img/products/')),
            ],
            options={
                'verbose_name': 'Цвет ножек',
                'verbose_name_plural': 'Цвета ножек',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='FillerMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Материал наполнителя',
                'verbose_name_plural': 'Материалы наполнителя',
            },
        ),
        migrations.CreateModel(
            name='FrameMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Материал каркаса',
                'verbose_name_plural': 'Материалы каркаса',
            },
        ),
        migrations.CreateModel(
            name='Mechanism',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Механизм',
                'verbose_name_plural': 'Механизмы',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Полное название')),
                ('slug', models.SlugField(blank=True)),
                ('catalog_name', models.CharField(max_length=128, verbose_name='Сокращенное название')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Текущая цена')),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Старая цена')),
                ('in_stock', models.BooleanField(default=True, verbose_name='В наличии?')),
                ('description', models.TextField(blank=True, max_length=512, verbose_name='Описание')),
                ('priority', models.IntegerField(default=1, verbose_name='Приоритет')),
                ('width', models.IntegerField(blank=True, verbose_name='Ширина, см')),
                ('depth', models.IntegerField(blank=True, verbose_name='Глубина, см')),
                ('height', models.IntegerField(blank=True, verbose_name='Высота, см')),
                ('bed_width', models.IntegerField(blank=True, verbose_name='Ширина спального места, см')),
                ('bed_length', models.IntegerField(blank=True, verbose_name='Длина спального места, см')),
                ('weight', models.IntegerField(blank=True, verbose_name='Вес, кг')),
                ('volume', models.IntegerField(blank=True, verbose_name='Объем, куб. м')),
                ('size', models.IntegerField(blank=True, verbose_name='Размер в разложенном виде, см')),
                ('box', models.IntegerField(blank=True, verbose_name='Бельевой ящик, см')),
                ('has_pillows', models.BooleanField(default=False, verbose_name='Наличие декоративных подушек')),
                ('has_armrests', models.BooleanField(default=False, verbose_name='Наличие подлокотников')),
                ('linings', models.CharField(blank=True, max_length=128, verbose_name='Деревяные накладки')),
                ('has_guaranty', models.BooleanField(default=True, verbose_name='Гарантия')),
                ('features_description', models.TextField(blank=True, max_length=512, verbose_name='Описание особенностей')),
                ('added_to_basket', models.IntegerField(blank=True, default=0, null=True, verbose_name='Товар добавлен в корзину, раз')),
                ('purchased', models.IntegerField(blank=True, default=0, null=True, verbose_name='Товар куплен, раз')),
                ('casings', models.ManyToManyField(blank=True, default=None, to='products.Casing', verbose_name='Обивки')),
                ('category', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='products.Category', verbose_name='Категория')),
                ('colors', models.ManyToManyField(blank=True, default=None, to='products.Color', verbose_name='Цвета ножек')),
                ('country', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='products.Country', verbose_name='Страна')),
                ('filler_material', models.ManyToManyField(blank=True, default=None, to='products.FillerMaterial', verbose_name='Материал наполнителя')),
                ('frame_material', models.ManyToManyField(blank=True, default=None, to='products.FrameMaterial', verbose_name='Материал каркаса')),
                ('mechanism', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='products.Mechanism', verbose_name='Механизм трансформации')),
                ('similar_products', models.ManyToManyField(blank=True, default=None, related_name='_product_similar_products_+', to='products.Product', verbose_name='Похожие товары')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='SupportMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Материал опор',
                'verbose_name_plural': 'Материалы опор',
            },
        ),
        migrations.CreateModel(
            name='UpholsteryMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Материал обивки',
                'verbose_name_plural': 'Материалы обивки',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='static/img/products/', verbose_name='Изображение')),
                ('img_thumb', models.ImageField(blank=True, editable=False, upload_to='static/img/products/')),
                ('priority', models.IntegerField(default=1, verbose_name='Приоритет')),
                ('product', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='images', to='products.Product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='support_material',
            field=models.ManyToManyField(blank=True, default=None, to='products.SupportMaterial', verbose_name='Материал опор'),
        ),
        migrations.AddField(
            model_name='product',
            name='upholstery_material',
            field=models.ManyToManyField(blank=True, default=None, to='products.UpholsteryMaterial', verbose_name='Материал обивки'),
        ),
        migrations.CreateModel(
            name='CasingCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('slug', models.SlugField(blank=True)),
                ('level', models.IntegerField(blank=True, default=0, verbose_name='Уровень')),
                ('parent_category', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='children', to='products.CasingCategory', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория обивок',
                'verbose_name_plural': 'Категории обивок',
            },
        ),
        migrations.AddField(
            model_name='casing',
            name='categories',
            field=models.ManyToManyField(blank=True, default=None, to='products.CasingCategory', verbose_name='Категории'),
        ),
    ]
